name: CI

on:
  pull_request:
    branches: [develop, master]
    types: [opened, synchronize, reopened] 
  push:
    branches: [develop, master]  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Cache node_modules
        uses: actions/cache@v3.0.8
        with:
          path: ~/.npm
          key: mykey-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Run NPM CI
        run: npm ci

      - name: Check Code Formatting
        run: npm run format:check
      
      - name: Run Automated Tests
        run: npm test -- --coverage
        env:
          CI: true

      - name: Run Automated Tests
        run: npm test -- --coverage
        env:
          CI: true

      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build

      - name: ZIP Assets
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage

      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain unknown-baseball.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v3.1.0
        with:
          name: code-coverage
          path: coverage   

      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build

      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: build
          path: build

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: build # for example    
